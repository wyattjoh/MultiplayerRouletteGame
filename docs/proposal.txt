* Project Title: Multiplayer Roulette Game

* Project Members: Jesse Chu, Wyatt Johnson

* Section: B2 (Jesse), B1 (Wyatt)



*Description:

    We plan to implement a multiplayer game, where each player utilizes their Arduino as 
    a controller/client. The main game will be hosted on a single computer, running the 
    Python game server. The python game server will communicate with anywhere from 1 to 3 
    Python Arduino Clients on the client computers where there could be anywhere from 1 
    to 3 Arduino Clients connected. This allows for up to 9 players to play simultaneously.

    The Arduino will consist of a screen/joystick combo, where information relevant to the 
    current game state will be displayed for the given player. Commands will be interpreted 
    on the Arduino hardware, and once a relevant selection has been made, will have the 
    discrete data sent to the Python Arduino Client for buffering and passing to the Python 
    Game Server.

    The game itself consists of players being assigned slots of a roulette wheel. Each round 
    every player sends the number of spots that they wish for the wheel to turn. The game 
    will execute all of these instructions, and the player whose slot ends up being selected 
    after this gains the points for the round. The point value of the round is randomly 
    determined each round, and may be either positive or negative. The game concludes after 
    10 rounds.



* Milestones:

    1. Create an Arduino client that can communicate with a dummy Python client both ways.

    2. Modify the Python client to handle input from multiple connected Arduinos at once.

    3. Create a GUI for the Arduino client.

    4. Create a graphical display to show the game state from the Python client.

    5. Create a local version of the game, with one Python client handling many Arduinos.
        (At this stage, we have a fully playable version of the game)

    6. Create a Game Server to handle multiple Python clients. The Game Server would now 
       store and handle the game state, while the Python clients act as a liaison between 
       the Game Server and their connected Arduinos.
        (This would allow for multiple machines, each with potentially multiple Arduinos, 
        to connect to the server)



* Delivery and Demonstration:  

    At least two Arduinos that are set up to play the game will be provided during demonstration. 
    Additional players may then join, provided that their Arduinos are properly wired up. The 
    client code for the Arduino will be ready to be uploaded to any players that wish to join in.

